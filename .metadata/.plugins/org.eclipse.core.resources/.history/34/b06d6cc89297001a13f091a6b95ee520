package vich_file_creation.vich_file_creation;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.xpath.XPathExpressionException;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.json.simple.parser.ParseException;
import org.xml.sax.SAXException;

public class createfiles {
	static String ExcelFilePath = "Files/MandatoryRuleFile.xlsx";
	static String validtemplatefile = "Files/MainFile.xml";
	 

	public static void main(String args[]) throws EncryptedDocumentException, InvalidFormatException, IOException,
			XPathExpressionException, ParserConfigurationException, SAXException, TransformerException, ParseException {
		// ExcelReadin
		InputStream inp = new FileInputStream(ExcelFilePath);
		Workbook wb = WorkbookFactory.create(inp);
		XpathSupport xpath = new XpathSupport();
		final int xmlField = 3;
		final int flagcheck = 0;
		final int filename = 4;
		Sheet sheet = wb.getSheetAt(0);

		
		//xpath.getJason(sheet.getRow(2).getCell(xmlField).toString());
		
		for (int j = 1; j < sheet.getLastRowNum()-1; j++) {
			if (sheet.getRow(j).getCell(flagcheck).toString().equalsIgnoreCase("Y")) {
				String xmlxpathfield = sheet.getRow(j).getCell(xmlField).toString();
				String newfilename=sheet.getRow(j).getCell(filename).toString();
				System.out.println(xmlxpathfield);
				xpath.modify(validtemplatefile, xmlxpathfield, "kannanMay17Ceatefiles","Files/"+newfilename+".xml");
			}
			
			
		}
	}
}
